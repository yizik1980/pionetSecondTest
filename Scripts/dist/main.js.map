{"version":3,"sources":["./src/app/interceptors/http-loading.interceptor.ts","./src/environments/environment.ts","./src/app/componets/header/header.component.ts","./src/app/componets/header/header.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/pages.service.ts","./src/app/app.module.ts","./src/app/model/page.ts","./src/app/componets/page-cover/page-cover.component.ts","./src/app/componets/page-cover/page-cover.component.html","./src/app/service/validate.service.ts","./src/app/componets/loader/global-loader/global-loader.component.ts","./src/app/componets/loader/global-loader/global-loader.component.html","./src/app/componets/page-handler/page-handler.component.ts","./src/app/componets/page-handler/page-handler.component.html","./src/app/app-routing.module.ts","./src/app/componets/page-list/page-list.component.ts","./src/app/componets/page-list/page-list.component.html","./src/app/service/loader.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from './../service/loader.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpLoadingInterceptor implements HttpInterceptor {\r\n  counter = 0;\r\n  constructor(private loader: LoaderService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.loader.show();\r\n    return next.handle(request).pipe(tap(($event: HttpEvent<any>) => {\r\n      if (!$event.type) {\r\n        this.counter++;\r\n      }\r\n      if ($event instanceof HttpResponse) {\r\n        this.counter--;\r\n        if (this.counter <= 0) {\r\n          this.loader.hide();\r\n        }\r\n\r\n      }\r\n    },\r\n      (err) => {\r\n        this.loader.hide();\r\n      }\r\n    ));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serviceUrl: 'http://localhost:56293/',\n  asp: 'http://localhost:56293/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input()\n  title: string;\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  addpage() {\n    this.router.navigate(['page']);\n  }\n\n}\n","<header>\n    <h1>{{title}}</h1>\n<nav>\n    <aside>\n        <button type=\"button\" (click)=\"addpage()\">הוסף עמוד</button>\n    </aside>\n</nav>\n       \n\n\n</header>","import { Component, OnInit } from '@angular/core';\r\nimport { pageService } from './service/pages.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private pageService: pageService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.pageService.getpages();\r\n  }\r\n  title = 'pionet Cms';\r\n}\r\n","\r\n<div class=\"flex flex-col justify-center\">\r\n  <app-header [title]=\"title\"></app-header>\r\n  <div class=\"container\">\r\n    <router-outlet  ></router-outlet>\r\n  </div>\r\n  \r\n</div>\r\n<app-global-loader></app-global-loader>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { page } from '../model/page';\r\n\r\nimport { environment } from './../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class pageService {\r\n  isEditClickedSubject = null;\r\n  isEditClickedObservable = null;\r\n  updatepageObj = { isEditClicked: false, page: null }\r\n\r\n  // show cover on its component\r\n  showCoveTrigger = new Subject<page>();\r\n  getAllpages = new Subject<page[]>();\r\n  private baseUrl = environment.asp;\r\n  constructor(private http: HttpClient) {\r\n    this.isEditClickedSubject = new BehaviorSubject(this.updatepageObj);\r\n    this.isEditClickedObservable = this.isEditClickedSubject.asObservable();\r\n  }\r\n\r\n  isEditClicked(editClicked: boolean, page: page) {\r\n    this.updatepageObj = { \"isEditClicked\": editClicked, \"page\": page };\r\n    this.isEditClickedSubject.next(this.updatepageObj);\r\n  }\r\n  public getpages() {\r\n    return this.http.get<page[]>(this.baseUrl + 'pages').subscribe(result => {\r\n      this.getAllpages.next(result);\r\n    },\r\n      (err) => console.log(err));\r\n  }\r\n  public addpage(page: page) {\r\n    debugger;\r\n    return this.http.post<page>(this.baseUrl + 'pages/postPage', page);\r\n  }\r\n  public updatepage(page: page) {\r\n    return this.http.put(`${this.baseUrl}pages/postPage`, page);\r\n  }\r\n  public Deletepage(id: number) {\r\n    return this.http.post(`${this.baseUrl}pages/Delete`,{id});\r\n  }\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { pageHandlerComponent } from './componets/page-handler/page-handler.component';\r\nimport { pageListComponent } from './componets/page-list/page-list.component'\r\n\r\nimport { pageCoverComponent } from './componets/page-cover/page-cover.component';\r\nimport { HttpLoadingInterceptor } from './interceptors/http-loading.interceptor';\r\nimport { GlobalLoaderComponent } from './componets/loader/global-loader/global-loader.component';\r\nimport { HeaderComponent } from './componets/header/header.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    pageHandlerComponent,\r\n    pageListComponent,\r\n    pageCoverComponent,\r\n    GlobalLoaderComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpLoadingInterceptor, multi: true },\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class page {\r\n\r\n\tconstructor() {\r\n\t}\r\n\tid: number;\r\n\ttitle: string;\r\n\tcontent: string;\r\n\thtmlContent: string;\r\n\tcreate_at: Date;\r\n\tnickName: string;\r\n\tcategory_id: number;\r\n}\r\nexport class errorModel extends page {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tclear() {\r\n\r\n\t}\r\n\tvalidate(constrain: validationConstrains) {\r\n\t\tif (!constrain.content && constrain.isRequire) {\r\n\t\t\tthis[constrain.prop] = constrain.errorMsg;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (constrain.pattarn) {\r\n\t\t\tif (!constrain.pattarn.test(constrain.content)) {\r\n\t\t\t\tthis[constrain.prop] = constrain.pattarnErrorMsg;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis[constrain.prop] = '';\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class validationConstrains {\r\n\tconstructor(args: any) {\r\n\t\tthis.isRequire = args.isReqire || false;\r\n\t\tthis.prop = args.prop;\r\n\t\tthis.content = args.content;\r\n\t\tthis.errorMsg = args.errorMsg;\r\n\t\tthis.pattarn = args.pattarn || null;\r\n\t\tthis.pattarnErrorMsg = args.pattarnErrorMsg;\r\n\t}\r\n\tisRequire: boolean;\r\n\tprop: string;\r\n\tcontent: string;\r\n\tpattarn: RegExp;\r\n\terrorMsg: string;\r\n\tpattarnErrorMsg: string;\r\n}\r\n\r\n\r\n\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscriber, Subscription } from 'rxjs';\nimport { pageService } from '../../service/pages.service';\n\n@Component({\n  selector: 'app-page-cover',\n  templateUrl: './page-cover.component.html',\n  styleUrls: ['./page-cover.component.css']\n})\nexport class pageCoverComponent implements OnInit, OnDestroy {\n  @Input()\n  ImgSrc: string | ArrayBuffer;\n  show: boolean;\n  showCoverSubscriber$: Subscription;\n  constructor(private pageservice: pageService) { }\n  ngOnDestroy(): void {\n    this.showCoverSubscriber$.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.showCoverSubscriber$ = this.pageservice.showCoveTrigger.subscribe(page => {\n      this.show = !!page.htmlContent;\n      this.ImgSrc = page.htmlContent;\n    })\n  }\n\n}\n","<div class=\"container\" *ngIf=\"show\">\n    <div class=\"frame\">\n        <img [src]=\"ImgSrc\" alt=\"pageCover\">\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { page, errorModel, validationConstrains } from '../model/page';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n  // validation\n  error = new errorModel();\n  constructor() { }\n  validate(page: page): boolean {\n    const constrainsName = new validationConstrains({ prop: 'title', content: page.title, isReqire: true, errorMsg: 'Page Name is missing' });\n    const constrainsAuthor = new validationConstrains({ prop: 'content', content: page.content, isReqire: true, errorMsg: 'Description Name is missing' });\n    const constrainsCoverPhoto = new validationConstrains({ prop: 'category_id', content: page.category_id, isReqire: true, errorMsg: 'categoryId Photo  is missing' });\n    return this.error.validate(constrainsName) && this.error.validate(constrainsAuthor) && this.error.validate(constrainsCoverPhoto);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoaderState } from './../../../model/LoaderState';\r\nimport { LoaderService } from './../../../service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-global-loader',\r\n  templateUrl: './global-loader.component.html',\r\n  styleUrls: ['./global-loader.component.css', './../loader.component.css']\r\n})\r\nexport class GlobalLoaderComponent implements OnInit, OnDestroy {\r\n  show = false;\r\n  private subscription: Subscription;\r\n  constructor(private loaderService: LoaderService) { }\r\n  ngOnInit() {\r\n    this.subscription = this.loaderService.loaderState\r\n      .subscribe((state: LoaderState) => {\r\n        this.show = state.show;\r\n      });\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"overlay show\" > -->\r\n<div class=\"overlay show\" [class]={show:show}>\r\n    <div class=\"multi\">\r\n        <div></div>\r\n    </div>\r\n</div>","\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { page, errorModel } from '../../model/page';\nimport { pageService } from './../../service/pages.service';\nimport { ValidateService } from '../../service/validate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-handler',\n  templateUrl: './page-handler.component.html',\n  styleUrls: ['./page-handler.component.css']\n})\nexport class pageHandlerComponent implements OnInit, OnDestroy {\n  page: page;\n  updatepageObj: any;\n  error = new errorModel();\n  isNew: boolean;\n  pageSubscribe: Subscription;\n  constructor(private pageService: pageService, private validationService: ValidateService,private route:Router) {\n    this.page = new page();\n    this.isNew = true;\n  }\n  ngOnDestroy(): void {\n    this.pageSubscribe.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.pageSubscribe = this.pageService.showCoveTrigger.subscribe(page => {\n      this.page = page;\n    });\n  }\n  savepage() {\n    this.page.category_id = Math.floor(Math.random() * 100);\n    this.page.id = 0;\n    this.page.create_at = new Date();\n    if (this.validationService.validate(this.page)) {\n      this.pageService.addpage(this.page).subscribe(result => {\n        this.pageService.getpages();\n        this.route.navigate(['']);\n      });\n    }\n    this.error = this.validationService.error;\n  }\n  updatepage() {\n    if (this.validationService.validate(this.page)) {\n      this.pageService.updatepage(this.page).subscribe(result => {\n        this.pageService.getpages();\n      });\n    }\n    this.error = this.validationService.error;\n  }\n\n\n\n  uploadFile($event) {\n    this.error = new errorModel();\n    const inputValue = $event.target;\n    const file: File = inputValue.files[0];\n    //this.page.fileName = file.name;\n    // if (file.size < 50000) {\n    //   const Reader: FileReader = new FileReader();\n    //   this.page.templateUrl = file.name;\n    //   Reader.onloadend = (e) => {\n    //     this.page.coverPhoto = e.target.result.toString();\n    //     this.pageService.showCoveTrigger.next(this.page);\n    //   }\n    //   Reader.readAsDataURL(file);\n    // } else {\n    //   this.error.coverPhoto = 'The file is too large';\n    //   inputValue.value = '';\n    // }\n\n  }\n  clear() {\n    this.error = new errorModel();\n  }\n}\n","<div class=\"form\">\n    <h3 *ngIf=\"isNew\">הוסף חדש</h3>\n    <h3 *ngIf=\"!isNew\">ערוך</h3>\n    \n    <div class=\"form-group relative\">\n        <label for=\"name\">כותרת</label>\n        <span class=\"error\" *ngIf=\"error.title\">{{error.title}}</span>\n        <input type=\"text\" class=\"form-control\" (focus)=\"clear()\" id=\"title\" required [(ngModel)]=\"page.title\"\n            name=\"title\">\n    </div>\n    <div class=\"form-group relative\">\n        <label for=\"content\">תוכן </label>\n        <span class=\"error\" *ngIf=\"error.content\">{{error.content}}</span>\n        <textarea class=\"form-control\" (focus)=\"clear()\" id=\"content\" required [(ngModel)]=\"page.content\" name=\"content\"\n            name=\"content\" id=\"content\" cols=\"30\" rows=\"10\"></textarea>\n\n    </div>\n    <div class=\"form-group relative\">\n        <label for=\"nickName\">שם כינוי </label>\n        <input type=\"text\" class=\"form-control\" (focus)=\"clear()\" id=\"nickName\"  [(ngModel)]=\"page.nickName\" name=\"nickName\" />\n\n    </div>\n\n    <!-- <div class=\"form-group relative\">\n        <label for=\"coverPhoto\">upload coverPhoto</label>\n        <span class=\"error\" *ngIf=\"error.fileName\">{{error.fileName}}</span>\n        <input type=\"file\" class=\"form-control\" (focus)=\"clear()\" (change)=\"uploadFile($event)\" id=\"coverPhoto\" required\n            name=\"coverPhoto\">\n    </div> -->\n    <div class=\"form-group relative\">\n        <label for=\"name\">תוכן html</label>\n        <textarea  class=\"form-control\" [(ngModel)]=\"page.htmlContent\"  contenteditable=\"true\" (focus)=\"clear()\"\n            id=\"htmlContent\">\n        </textarea>\n\n    </div>\n    <div class=\"form-group relative\">\n        <button type=\"button\" (click)=\"savepage()\" *ngIf=\"isNew\" >שמור</button>\n        <button type=\"button\" (click)=\"updatepage()\" *ngIf=\"!isNew\" class=\"btn btn-success\">עדכן</button>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { pageListComponent } from './componets/page-list/page-list.component';\nimport { pageHandlerComponent } from './componets/page-handler/page-handler.component';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  { path: '', component: pageListComponent },\n  { path: 'page', component: pageHandlerComponent },\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { page } from '../../model/page';\nimport { pageService } from './../../service/pages.service';\n\n@Component({\n  selector: 'app-page-list',\n  templateUrl: './page-list.component.html',\n  styleUrls: ['./page-list.component.css']\n})\nexport class pageListComponent implements OnInit {\n\n  pages: page[];\n  pages$: Observable<page[]>;\n  fullpageList: page[];\n  editpage: boolean = false;\n  constructor(private pageService: pageService, private router:Router) { }\n\n  ngOnInit() {\n    this.pageService.getAllpages.subscribe(allpages => {\n      this.pages = allpages;\n      this.fullpageList = allpages;\n    })\n  }\n  showPage(p: page) {\n    this.pageService.showCoveTrigger.next(p);\n  }\n  updatepage(p: page) {\n    this.pageService.showCoveTrigger.next(p);\n    this.router.navigate(['page']);\n  }\n  filterItem($event) {\n    const reg = new RegExp($event.target.value);\n    this.pages = this.fullpageList.filter(page => reg.test(page.title) || reg.test(page.content))\n  }\n  deletepage(pageToDelete: page) {\n    this.pageService.Deletepage(pageToDelete.id).subscribe(res => {\n      this.pageService.getpages();\n      this.pageService.showCoveTrigger.next(new page());\n    });\n  }\n\n}\n","<div class=\"pages\">\n    <div  *ngFor=\"let page of pages\" class=\"pointer relative\">\n        <s class=\"del\" (click)=\"deletepage(page)\"></s>\n                <a (click)=\"showPage(page)\">{{page.title}}</a>\n               \n                <s class=\"pen\" (click)=\"updatepage(page)\"></s>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LoaderState } from '../model/LoaderState'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  private loaderSubject = new Subject<LoaderState>();\r\n  loaderState = this.loaderSubject.asObservable();\r\n  constructor() { }\r\n\r\n  show() {\r\n    this.loaderSubject.next(<LoaderState>{ show: true });\r\n  }\r\n  hide() {\r\n    this.loaderSubject.next(<LoaderState>{ show: false });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}